import pandas as pd
import numpy as np

# Reading datasets by using read_csv from pandas package
movie = pd.read_csv("/content/movie.csv")
user = pd.read_csv("/content/user.csv")
ratings = pd.read_csv("/content/ratings.csv")

user.head()

user.shape

user.info()

user.describe()

movie.head()

movie.shape

movie.info()

movie.describe()

ratings.head()

ratings.shape

ratings.info()

ratings.describe()

movie.head()

movie.columns

genres = ['Action', 'Adventure',
       'Animation', 'Childrens', 'Comedy', 'Crime', 'Documentary', 'Drama',
       'Fantasy', 'Film-Noir', 'Horror', 'Musical', 'Mystery', 'Romance',
       'Sci-Fi', 'Thriller', 'War', 'Western']

# using the len() function to calculate the number of genres
print('The number of genres present in the movie dataset are ', len(genres))

# printing the genres list
genres

movie[genres].sum()

movie[genres].sum().sort_values(ascending = False) #ascending= False will sort the values in descending order. By default the parameter ascending is set to True

movie["Number of Genres"] = movie.loc[:, genres].sum(axis=1)

movie.head()

movie[movie['Number of Genres']>1] #this will subset the data as per the given condition

movie[movie['Number of Genres']>1].shape

movie.shape

df_merge = movie.merge(ratings, on = 'movie id', how = 'inner')
df_merge.head()

genres

for i in genres:
    print(i,':' , df_merge[df_merge[i]==1].rating.mean())

df_merge.head()

avg_rating = df_merge.groupby(['movie title']).mean()[['rating']].reset_index() # reset_index will reset the index of dataframe to default indexing (0 to number of rows minus 1)

avg_rating

avg_rating.rename(columns={'rating':'Avg_rating'},inplace=True)
avg_rating.head()

avg_rating.sort_values(ascending=False, by= 'Avg_rating')

avg_rating[avg_rating['Avg_rating']==5] #it will subset the data as per the specified condition

movie_count = df_merge.groupby(['movie title'])['rating'].count().reset_index()
movie_count

movie_count.rename(columns={'rating':'Rating_counts'},inplace=True)
movie_count.head()

movie_count.sort_values(ascending=False, by= 'Rating_counts')

movie_100 = movie_count[movie_count['Rating_counts']>100] #this will subset the dataset 'movie_count' as per the specified condition
movie_100

avg_rating.head()

movie_100.head()

df_top= avg_rating.merge(movie_100, on = 'movie title', how = 'inner')
df_top

df_top.sort_values(ascending=False, by='Avg_rating').head(25) #display top 25 movies on the basis of average rating

df_top.sort_values(ascending=False, by='Rating_counts').head(25) #display top 25 movies on the basis of rating counts

# Merging user dataset with movie and ratings(already merged : df_merge) dataset
df_merge_all = df_merge.merge(user, on = 'user id', how = 'inner')

df_merge_all.head()

user['gender'].value_counts(normalize=True) #this will give the proportion of males and females users extracted from User dataset 

df_merge_all.groupby('gender').rating.mean() #grouping the dataset on 'gender' column and taking the average of ratings

df_merge_all.groupby('occupation').rating.mean().sort_values(ascending= False) #grouping the dataset on 'occupation' column and taking the average of ratings.

df_merge_all.groupby(['occupation','gender']).rating.mean()
